[{
	"title": "Assignment-1",
	"activityType": "quiz",
	"quizDescription": [{
		"text": "<b>Popularity of music records</b><br>The music industry has a well-developed market with a global annual revenue around $15 billion. The recording industry is highly competitive and is dominated by three big production companies which make up nearly 82% of the total annual album sales. <br><br>Artists are at the core of the music industry and record labels provide them with the necessary resources to sell their music on a large scale. A record label incurs numerous costs (studio recording, marketing, distribution, and touring) in exchange for a percentage of the profits from album sales, singles and concert tickets.<br><br>Unfortunately, the success of an artist's release is highly uncertain: a single may be extremely popular, resulting in widespread radio play and digital downloads, while another single may turn out quite unpopular, and therefore unprofitable. <br><br>Knowing the competitive nature of the recording industry, record labels face the fundamental decision problem of which musical releases to support to maximize their financial success. <br><br>How can we use analytics to predict the popularity of a song? In this assignment, we challenge ourselves to predict whether a song will reach a spot in the Top 10 of the Billboard Hot 100 Chart.<br><br> Taking an analytics approach, we aim to use information about a song's properties to predict its popularity. The dataset <a href=\"https://prod-edxapp.edx-cdn.org/assets/courseware/v1/796af11b376799bbe7769dc645564867/asset-v1:MITx+15.071x+3T2018+type@asset+block/songs.csv\">songs.csv</a>  consists of all songs which made it to the Top 10 of the Billboard Hot 100 Chart from 1990-2010 plus a sample of additional songs that didn't make the Top 10. This data comes from three sources: <a href=\"http://en.wikipedia.org/wiki/Billboard_Hot_100\">Wikipedia</a>, <a href=\"http://www.billboard.com/\">Billboard.com</a> and <a href=\"http://the.echonest.com/\">EchoNest</a> <br><br>The variables included in the dataset either describe the artist or the song, or they are associated with the following song attributes: time signature, loudness, key, pitch, tempo, and timbre.<br><br>Here's a detailed description of the variables:<br><br>1. <b>year</b> = the year the song was released<br>2. <b>songtitle</b> = the title of the song<br>3. <b>artistname</b> = the name of the artist of the song<br>4. <b>songID and artistID</b> = identifying variables for the song and artist<br>5. <b>timesignature and timesignature_confidence</b> = a variable estimating the time signature of the song, and the confidence in the estimate<br>6. <b>loudness</b> = a continuous variable indicating the average amplitude of the audio in decibels<br>7. <b>tempo and tempo_confidence</b> = a variable indicating the estimated beats per minute of the song, and the confidence in the estimate<br>8. <b>key and key_confidence</b> = a variable with twelve levels indicating the estimated key of the song (C, C#, . . ., B), and the confidence in the estimate<br>9. <b>energy</b> = a variable that represents the overall acoustic energy of the song, using a mix of features such as loudness<br>10. <b>pitch</b> = a continuous variable that indicates the pitch of the song<br>11. <b>timbre_0_min, timbre_0_max, timbre_1_min, timbre_1_max, . . . , timbre_11_min, and timbre_11_max</b> = variables that indicate the minimum/maximum values over all segments for each of the twelve values in the timbre vector (resulting in 24 continuous variables)<br>12. <b>Top10</b> = a binary variable indicating whether or not the song made it to the Top 10 of the Billboard Hot 100 Chart (1 if it was in the top 10, and 0 if it was not)"
	}],
	"questions": [{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem 1.2 - Understanding the DataHow many songs does the dataset include for which the artist name is \"Michael Jackson\"?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "17",
					"correct": "False"
				},
				{
					"option": "18",
					"correct": "True"
				},
				{
					"option": "19",
					"correct": "False"
				},
				{
					"option": "20",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem  - Understanding the Data. Use the read.csv function to load the dataset \"songs.csv\" into R. How many observations (songs) are from the year 2010?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "373",
					"correct": "True"
				},
				{
					"option": "357",
					"correct": "False"
				},
				{
					"option": "343",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "checkbox",
			"questionText": [{
				"text": "Problem - Understanding the Data<br>Which of these songs by Michael Jackson made it to the Top 10? Select all that apply."
			}],
			"max_marks": 1,
			"options": [{
					"option": "Beat It",
					"correct": "False"
				},
				{
					"option": "You Rock My World",
					"correct": "True"
				},
				{
					"option": "Billie Jean",
					"correct": "False"
				},
				{
					"option": "You Are Not Alone",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "checkbox",
			"questionText": [{
				"text": "Problem- Understanding the Data : The variable corresponding to the estimated time signature (timesignature) is discrete, meaning that it only takes integer values (0, 1, 2, 3, . . . ). What are the values of this variable that occur in our dataset? Select all that apply."
			}],
			"max_marks": 1,
			"options": [{
					"option": "0",
					"correct": "False"
				},
				{
					"option": "1",
					"correct": "True"
				},
				{
					"option": "2",
					"correct": "False"
				},
				{
					"option": "3",
					"correct": "True"
				},
				{
					"option": "4",
					"correct": "True"
				},
				{
					"option": "5",
					"correct": "True"
				},
				{
					"option": "6",
					"correct": "False"
				},
				{
					"option": "7",
					"correct": "True"
				},
				{
					"option": "8",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
				{
			"questionType": "mcq",
			"questionText": [{
				"text": "Which timesignature value is the most frequent among songs in our dataset?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "0",
					"correct": "False"
				},
				{
					"option": "1",
					"correct": "False"
				},
				{
					"option": "2",
					"correct": "False"
				},
				{
					"option": "3",
					"correct": "False"
				},
				{
					"option": "4",
					"correct": "True"
				},
				{
					"option": "5",
					"correct": "False"
				},
				{
					"option": "6",
					"correct": "False"
				},
				{
					"option": "7",
					"correct": "False"
				},
				{
					"option": "8",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Understanding the Data. Out of all of the songs in our dataset, the song with the highest tempo is one of the following songs. Which one is it?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "Until The Day I Die",
					"correct": "False"
				},
				{
					"option": "Wanna Be Startin' Somethin'",
					"correct": "True"
				},
				{
					"option": "My Happy Ending",
					"correct": "False"
				},
				{
					"option": "You Make Me Wannaâ€¦",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Creating Our Prediction Model. We wish to predict whether or not a song will make it to the Top 10. To do this, first use the subset function to split the data into a training set \"SongsTrain\" consisting of all the observations up to and including 2009 song releases, and a testing set \"SongsTest\", consisting of the 2010 song releases.How many observations (songs) are in the training set?"
			}],
			"max_marks": 1,
			"options": [{
					"option": " 7201",
					"correct": "True"
				},
				{
					"option": "7202",
					"correct": "False"
				},
				{
					"option": "8000",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Creating Our Prediction Model. We wish to predict whether or not a song will make it to the Top 10. To do this, first use the subset function to split the data into a training set \"SongsTrain\" consisting of all the observations up to and including 2009 song releases, and a testing set \"SongsTest\", consisting of the 2010 song releases.How many observations (songs) are in the training set?"
			}],
			"max_marks": 1,
			"options": [{
					"option": " 7201",
					"correct": "True"
				},
				{
					"option": "7202",
					"correct": "False"
				},
				{
					"option": "8000",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem  - Creating our Prediction Model<br><br>In this problem, our outcome variable is \"Top10\" - we are trying to predict whether or not a song will make it to the Top 10 of the Billboard Hot 100 Chart. Since the outcome variable is binary, we will build a logistic regression model. We'll start by using all song attributes as our independent variables, which we'll call Model 1.<br><br>We will only use the variables in our dataset that describe the numerical attributes of the song in our logistic regression model. So we won't use the variables \"year\", \"songtitle\", \"artistname\", \"songID\" or \"artistID\".<br><br>We have seen in the lecture that, to build the logistic regression model, we would normally explicitly input the formula including all the independent variables in R. However, in this case, this is a tedious amount of work since we have a large number of independent variables.<br><br>There is a nice trick to avoid doing so. Let's suppose that, except for the outcome variable Top10, all other variables in the training set are inputs to Model 1. Then, we can use the formulaM<br><br>SongsLog1 = glm(Top10 ~ ., data=SongsTrain, family=binomial)<br><br>to build our model. Notice that the \".\" is used in place of enumerating all the independent variables. (Also, keep in mind that you can choose to put quotes around binomial, or leave out the quotes. R can understand this argument either way.)<br><br>However, in our case, we want to exclude some of the variables in our dataset from being used as independent variables (\"year\", \"songtitle\", \"artistname\", \"songID\", and \"artistID\"). To do this, we can use the following trick. First define a vector of variable names called nonvars - these are the variables that we won't use in our model.<br><br>nonvars = c(\"year\", \"songtitle\", \"artistname\", \"songID\", \"artistID\")<br><br>To remove these variables from your training and testing sets, type the following commands in your R console:<br><br>SongsTrain = SongsTrain[ , !(names(SongsTrain) %in% nonvars) ]<br><br>SongsTest = SongsTest[ , !(names(SongsTest) %in% nonvars) ]<br><br>Now, use the glm function to build a logistic regression model to predict Top10 using all of the other variables as the independent variables. You should use SongsTrain to build the model.<br><br>Looking at the summary of your model, what is the value of the Akaike Information Criterion (AIC)?"
			}],
			"max_marks": 1,
			"options": [{
					"option": " 4826.2",
					"correct": "False"
				},
				{
					"option": "4827.2",
					"correct": "True"
				},
				{
					"option": "4828.2",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Creating Our Prediction Model<br>Let's now think about the variables in our dataset related to the confidence of the time signature, key and tempo (timesignature_confidence, key_confidence, and tempo_confidence). Our model seems to indicate that these confidence variables are significant (rather than the variables timesignature, key and tempo themselves). What does the model suggest?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "The lower our confidence about time signature, key and tempo, the more likely the song is to be in the Top 10",
					"correct": "False"
				},
				{
					"option": "The higher our confidence about time signature, key and tempo, the more likely the song is to be in the Top 10",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Creating Our Prediction Model<br>In general, if the confidence is low for the time signature, tempo, and key, then the song is more likely to be complex. What does Model 1 suggest in terms of complexity?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "Mainstream listeners tend to prefer more complex songs",
					"correct": "False"
				},
				{
					"option": "Mainstream listeners tend to prefer less complex songs",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Creating Our Prediction Model<br><br>Songs with heavier instrumentation tend to be louder (have higher values in the variable \"loudness\") and more energetic (have higher values in the variable \"energy\").<br>By inspecting the coefficient of the variable \"loudness\", what does Model 1 suggest?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "Mainstream listeners prefer songs with heavy instrumentation",
					"correct": "True"
				},
				{
					"option": "Mainstream listeners prefer songs with light instrumentation",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Beware of Multicollinearity Issues!. What is the correlation between the variables \"loudness\" and \"energy\" in the training set?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "0.74991",
					"correct": "False"
				},
				{
					"option": "0.73991",
					"correct": "True"
				},
				{
					"option": "0.79991",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Beware of Multicollinearity Issues!<br><br>Create Model 2, which is Model 1 without the independent variable \"loudness\". This can be done with the following command:<br><br>SongsLog2 = glm(Top10 ~ . - loudness, data=SongsTrain, family=binomial)<br><br>We just subtracted the variable loudness. We couldn't do this with the variables \"songtitle\" and \"artistname\", because they are not numeric variables, and we might get different values in the test set that the training set has never seen. But this approach subtracting the variable from the model formula) will always work when you want to remove numeric variables.<br><br>Look at the summary of SongsLog2, and inspect the coefficient of the variable \"energy\". What do you observe?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "Model 2 suggests that songs with high energy levels tend to be more popular. This contradicts our observation in Model 1. correct",
					"correct": "True"
				},
				{
					"option": "Model 2 suggests that, similarly to Model 1, songs with low energy levels tend to be more popular.",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Beware of Multicollinearity Issues!<br><br>Now, create Model 3, which should be exactly like Model 1, but without the variable \"energy\". <br><br>Look at the summary of Model 3 and inspect the coefficient of the variable \"loudness\". Remembering that higher loudness and energy both occur in songs with heavier instrumentation, do we make the same observation about the popularity of heavy instrumentation as we did with Model 2?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "No",
					"correct": "False"
				},
				{
					"option": "Yes",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Validating Our Model<br><br>Make predictions on the test set using Model 3. What is the accuracy of Model 3 on the test set, using a threshold of 0.45? (Compute the accuracy as a number between 0 and 1.)"
			}],
			"max_marks": 1,
			"options": [{
					"option": "0.89936",
					"correct": "False"
				},
				{
					"option": "0.88936",
					"correct": "False"
				},
				{
					"option": "0.87936",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem  - Validating Our Model<br><br>It seems that Model 3 gives us a small improvement over the baseline model. Still, does it create an edge?<b><br>Let's view the two models from an investment perspective. A production company is interested in investing in songs that are highly likely to make it to the Top 10. The company's objective is to minimize its risk of financial losses attributed to investing in songs that end up unpopular.<br><br>A competitive edge can therefore be achieved if we can provide the production company a list of songs that are highly likely to end up in the Top 10. We note that the baseline model does not prove useful, as it simply does not label any song as a hit. Let us see what our model has to offer.<br><br>How many songs does Model 3 correctly predict as Top 10 hits in 2010 (remember that all songs in 2010 went into our test set), using a threshold of 0.45?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "17",
					"correct": "False"
				},
				{
					"option": "18",
					"correct": "False"
				},
				{
					"option": "19",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "How many non-hit songs does Model 3 predict will be Top 10 hits (again, looking at the test set), using a threshold of 0.45?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "1",
					"correct": "False"
				},
				{
					"option": "4",
					"correct": "False"
				},
				{
					"option": "5",
					"correct": "True"
				},
				{
					"option": "8",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "Problem - Validating Our Model<br><br>What is the sensitivity of Model 3 on the test set, using a threshold of 0.45?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "0.3320339",
					"correct": "False"
				},
				{
					"option": "0.3230339",
					"correct": "False"
				},
				{
					"option": "0.3220339",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "mcq",
			"questionText": [{
				"text": "What is the specificity of Model 3 on the test set, using a threshold of 0.45?"
			}],
			"max_marks": 1,
			"options": [{
					"option": "0.9840764",
					"correct": "True"
				},
				{
					"option": "0.9840765",
					"correct": "False"
				},
				{
					"option": "0.9840766",
					"correct": "False"
				},
				{
					"option": "0.9840767",
					"correct": "False"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		},
		{
			"questionType": "checkbox",
			"questionText": [{
				"text": "Problem - Validating Our Model. What conclusions can you make about our model? (Select all that apply.)"
			}],
			"max_marks": 1,
			"options": [{
					"option": "Model 3 favors specificity over sensitivity.",
					"correct": "True"
				},
				{
					"option": "Model 3 favors sensitivity over specificity.",
					"correct": "False"
				},
				{
					"option": "Model 3 captures less than half of Top 10 songs in 2010. Model 3 therefore does not provide a useful list of candidate songs to investors, and hence offers no competitive edge.",
					"correct": "False"
				},
				{
					"option": "Model 3 provides conservative predictions, and predicts that a song will make it to the Top 10 very rarely. So while it detects less than half of the Top 10 songs, we can be very confident in the songs that it does predict to be Top 10 hits.",
					"correct": "True"
				}
			],
			"correct_feedback": "Correct",
			"wrong_feedback": "Incorrect"
		}
	]

}]